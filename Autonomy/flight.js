define([],function(){function e(e){this._globe=e;this._viewer=e._viewer;this._globeId=e._globeId}e.prototype.flyByPoints=function(e){var t=this;var i=[];for(var n=1;n<e.length;n++){var a=e[n-1];var r=e[n];var o=t._getInList(a,r);for(var l=0;l<o.length;l++){var s=o[l];i[i.length]=Cesium.Cartesian3.fromDegrees(s.lon,s.lat,s.alt);i[i.length-1].angle=s.angle}}t._flyEntity=t._viewer.entities.add({position:new Cesium.CallbackProperty(function(){return t._flyPoint},false),orientation:new Cesium.CallbackProperty(function(){return t._flyOrientation},false),model:{uri:t._globe.urlConfig.CTS+"Autonomy/models/CesiumAir/Cesium_Air.gltf",minimumPixelSize:64}});t._viewer.trackedEntity=t._flyEntity;t._flyEnd=false;t._flyPause=false;t._getFlyPointByI(i,0)};e.prototype._getFlyPointByI=function(e,t){var i=this;if(i._flyEnd){return}if(t==e.length){i.flyToEnd()}else{i._flyPoint=e[t];var n=Cesium.Cartographic.fromCartesian(e[t]);var a=Cesium.Math.toDegrees(n.longitude);var r=Cesium.Math.toDegrees(n.latitude);var o=Cesium.Cartesian3.fromDegrees(a,r);i._flyOrientation=Cesium.Transforms.headingPitchRollQuaternion(o,new Cesium.HeadingPitchRoll(Cesium.Math.toRadians(e[t].angle-90),0,0));setTimeout(function(){if(i._flyPause){i._getFlyPointByI(e,t)}else{i._getFlyPointByI(e,t+1)}},30)}};e.prototype._getInList=function(e,t){var i=this;var n=CommonFunc.getAngle(e.lon,e.lat,t.lon,t.lat);var a=CommonFunc.getDistance(e.lon,e.lat,t.lon,t.lat);var r=Cesium.Cartesian3.fromDegrees(e.lon,e.lat,e.alt);var o=Cesium.Cartesian3.fromDegrees(t.lon,t.lat,t.alt);var l=new Cesium.Cartesian3;Cesium.Cartesian3.subtract(o,r,l);Cesium.Cartesian3.normalize(l,l);var s=new Cesium.Ray(r,l);var u=[];var f=0;var y=0;do{y=f*20;var m=Cesium.Ray.getPoint(s,y);if(y>a){m=Cesium.Ray.getPoint(s,a)}var g=Cesium.Cartographic.fromCartesian(m);var C=Cesium.Math.toDegrees(g.longitude);var v=Cesium.Math.toDegrees(g.latitude);var _=g.height;u.push({lon:C,lat:v,alt:_,angle:n});f++}while(y<=a);return u};e.prototype.flyToEnd=function(){var e=this;e._flyEnd=true;e._viewer.trackedEntity=undefined;e._viewer.entities.remove(e._flyEntity)};e.prototype.flyToPause=function(){var e=this;e._flyPause=true};e.prototype.flyToRecovery=function(){var e=this;e._flyPause=false};return e});